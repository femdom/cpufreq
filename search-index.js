var searchIndex = {};
searchIndex["cpufreq"] = {"doc":"# Rust port of cpufreq library.\nLibrary bindings generated from [this](https://github.com/torvalds/linux/blob/master/tools/power/cpupower/lib/cpufreq.h)\nheaders using [rust-bindgen](https://github.com/crabtw/rust-bindgen) tool.","items":[[3,"Iterator","cpufreq","",null,null],[3,"Cpu","","",null,null],[3,"Policy","","",null,null],[12,"min","","",0,null],[12,"max","","",0,null],[12,"governor","","",0,null],[4,"CpuPowerError","","",null,null],[13,"Unknown","","",1,null],[13,"CpuNotFound","","",1,null],[12,"id","cpufreq::CpuPowerError","",1,null],[13,"SystemError","cpufreq","",1,null],[13,"FrequencyNotSet","","",1,null],[12,"id","cpufreq::CpuPowerError","",1,null],[12,"requested","","",1,null],[12,"actual","","",1,null],[12,"errno","","",1,null],[13,"CantGetPolicy","cpufreq","",1,null],[12,"id","cpufreq::CpuPowerError","",1,null],[12,"parent","","",1,null],[13,"CantSetPolicy","cpufreq","",1,null],[12,"id","cpufreq::CpuPowerError","",1,null],[12,"parent","","",1,null],[13,"Utf8Error","cpufreq","",1,null],[13,"FromUtf8Error","","",1,null],[13,"NulError","","",1,null],[11,"next","","",2,null],[11,"fmt","","",3,null],[11,"get_all","","Iterate over all Cpu&#39;s available in your system",3,{"inputs":[],"output":{"name":"iterator"}}],[11,"exists","","Check whether a Cpu with given ID exists in you system",3,{"inputs":[{"name":"cpuid"}],"output":{"name":"bool"}}],[11,"new","","",3,{"inputs":[{"name":"cpuid"}],"output":{"name":"cpu"}}],[11,"get_freq","","Get frequency reported by hardware or by kernel\nThis function tries to get freq using call to hardware first,\nand if that call fails - uses call to kernel",3,null],[11,"get_freq_kernel","","Get frequency reported by your kernel\nAccording to the underlying library documentation -\nyou don&#39;t need to be root to perform this operation",3,null],[11,"get_freq_hardware","","Get frequency reported by your hardware\nAccording to the underlying library documentation -\nyou should be root to perform this operation",3,null],[11,"set_freq","","Set frequency for the given CPU\nYou should have root privileges to do that",3,null],[11,"get_transition_latency","","Determine CPUs transition latency\nReturns: transition latency in nanoseconds (10^(-9) s)",3,null],[11,"modify_policy_max","","Modify current policy by changing it&#39;s max frequency",3,null],[11,"modify_policy_min","","Modify current policy by changing it&#39;s min frequency",3,null],[11,"modify_policy_governor","","Modify current policy by changing it&#39;s governor",3,null],[11,"get_hardware_limits","","Determine hardware CPU frequency limits",3,null],[11,"get_id","","Get if of the current processor",3,null],[11,"get_driver","","Determine CPUfreq driver used",3,null],[11,"get_policy","","# Determine CPUfreq policy used",3,null],[11,"set_policy","","Set new CPUfreq policy to use\nThis tries to set the passed policy as new policy as close as possible,\nbut results may differ depending e.g. on governors being available.",3,null],[11,"get_available_governors","","determine CPUfreq governors currently available",3,null],[11,"get_available_frequencies","","Get frequencies available for the given CPU",3,null],[11,"get_affected_cpus","","",3,null],[11,"get_related_cpus","","",3,null],[11,"get_stats","","Determine stats for the cpufreq subsystem",3,null],[11,"get_transitions","","Determine total transition count for this CPU",3,null],[11,"fmt","","",3,null],[11,"fmt","","",0,null],[11,"new","","",0,{"inputs":[{"name":"u64"},{"name":"u64"},{"name":"str"}],"output":{"name":"policy"}}],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"description","","",1,null],[11,"cause","","",1,null],[11,"from","","",1,{"inputs":[{"name":"utf8error"}],"output":{"name":"cpupowererror"}}],[11,"from","","",1,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"cpupowererror"}}],[11,"from","","",1,{"inputs":[{"name":"nulerror"}],"output":{"name":"cpupowererror"}}],[6,"CpuId","","",null,null],[6,"Frequency","","",null,null]],"paths":[[3,"Policy"],[4,"CpuPowerError"],[3,"Iterator"],[3,"Cpu"]]};
initSearch(searchIndex);
